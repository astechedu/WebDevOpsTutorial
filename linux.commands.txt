
>>>>>>>> Linux Commands <<<<<<<<<


--------------------------------------
--------------------------------------
Ubuntu
Red Hat Enterprise Linux
Linux Mint
Debian
Fedora
--------------------------------------
-------------------------------------

On Ubuntu: 

How to Install LAMP Apache, MySQL, PHP in Ubuntu 20.04:

Step 1: Setup Initialization:
sudo apt update
sudo apt upgrade

Step 2: Install Apache:
sudo apt install apache2

Step 3: Setup Firewall:
sudo ufw app list

Output:
Available applications:
   Apache
   Apache Full
   Apache Secure
   OpenSSH


Now we will enable Apache Full: 
sudo ufw allow 'Apache Full'


With this command you can view the status of UFW:
sudo ufw status

You will see the output as follows.


Output
Status: active
 To                         Action      From
 --                         ------      ----
 Apache Full                ALLOW       Anywhere                  
 OpenSSH                    ALLOW       Anywhere                  
 Apache Full (v6)           ALLOW       Anywhere (v6)             
 OpenSSH (v6)               ALLOW       Anywhere (v6)


 Step: 4 Check Apache Installation:
 sudo systemctl status apache2


Output:
● apache2.service - The Apache HTTP Server
    Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)
   Drop-In: /lib/systemd/system/apache2.service.d
            └─apache2-systemd.conf
    Active: active (running) since Sun 2021-12-12 04:58:34 UTC; 5min ago
  Main PID: 10617 (apache2)
     Tasks: 55 (limit: 667)
    CGroup: /system.slice/apache2.service
            ├─10617 /usr/sbin/apache2 -k start
            ├─10619 /usr/sbin/apache2 -k start
            └─10620 /usr/sbin/apache2 -k start
 Sun 12 04:58:34 apache systemd[1]: Starting The Apache HTTP Server…
 Sun 12 04:58:34 apache systemd[1]: Started The Apache HTTP Server.


 Step 5: Install MySQL:
 sudo apt install mysql-server


 sudo service mysql status


 The output should show that the service is enabled and running:

 ● mysql.service - MySQL Community Server
     Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset: enabled)
     Active: active (running) since Sun 2021-12-12:13:18 UTC; 1min 4s ago
   Main PID: 3333 (mysqld)
     Status: "Server is operational"
      Tasks: 38 (limit: 2010)
     Memory: 322.9M
     CGroup: /system.slice/mysql.service
             └─3333 /usr/sbin/mysqld 


Step 6: Secure MySQL:
sudo mysql_secure_installation


Step 7: Install PHP:

sudo apt install php libapache2-mod-php php7.4-mysql php7.4-common php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-cli php7.4-dev php7.4-imap php7.4-mbstring php7.4-opcache php7.4-soap php7.4-zip php7.4-intl -y 


check the version:
php -v

Step 8: Configure PHP:
sudo nano /etc/php/7.4/apache2/php.ini

Hit F6 for search inside the editor and update the following values for better performance.

upload_max_filesize = 32M 
post_max_size = 48M 
memory_limit = 256M 
max_execution_time = 600 
max_input_vars = 3000 
max_input_time = 1000

Step 9: Configure Apache:
sudo a2dissite 000-default

Create website directories:
sudo mkdir -p /var/www/html/domainname/public


Setup correct permissions:

sudo chmod -R 755 /var/www/html/domainname
sudo chown -R www-data:www-data /var/www/html/domainname

Create a new virtual host configuration:
sudo nano /etc/apache2/sites-available/domainname.conf


Paste the following configurations in the new file:

<VirtualHost *:80>
     ServerAdmin admin@domainname.com
     ServerName domainname.com
     ServerAlias www.domainname.com

     DocumentRoot /var/www/html/domainname/public

     <Directory /var/www/html/domainname/public>
         Options Indexes FollowSymLinks
         AllowOverride All
         Require all granted
     </Directory>

     ErrorLog ${APACHE_LOG_DIR}/error.log 
     CustomLog ${APACHE_LOG_DIR}/access.log combined 
 </VirtualHost>


Enable the new configuration:

sudo a2ensite domainname.conf


Step 10: Install Let’s Encrypt SSL:
sudo apt install python3-certbot-apache


Now we have installed Certbot by Let’s Encrypt for Ubuntu 20.04, run this command to receive your certificates.

sudo certbot --apache --agree-tos --redirect -m youremail@email.com -d domainname.com -d www.domainname.com


Select the appropriate option and hit Enter

Step 11: Renewing SSL Certificate:
Certificates provided by Let’s Encrypt are valid for 90 days only

sudo certbot renew --dry-run


Step: 12: Test the Setup:

Once you have done the able steps you can create a new test PHP file in your web directory.

sudo nano /var/www/html/domainname/public/info.php


Paste the below code inside the file.

<?php phpinfo();

Save the file.



Now go ahead and check your domain name with the info.php in the url (domainname.com/info.php).

You will see that your domain got redirected to HTTPS and see the PHP information details.




Conclusion:

Now you have learned how to install LAMP stack Ubuntu 20.04.


----------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
>>>>>>> Ubuntu 20.4 - Linux <<<<<<<<<<<

//Install nginx on Ubuntu All Steps:

sudo apt update
sudo apt install nginx
sudo systemctl status nginx
sudo systemctl stop nginx
sudo systemctl status nginx
sudo systemctl start nginx
sudo systemctl status nginx
cd /etc/nginx/
ls
ls confg.d/
ls sites-enabled/
is sites-available/
clean

>>>>>> Kali Linux 2020.4 <<<<<<<<<<<

//Install nginx on Kali Linux All Steps:

sudo apt update
sudo apt install nginx
clean
sudo service nginx status
sudo sysemctl status nginx
sudo service nginx start
sudo nginx -v
clean 
sudo ifcongi
sudo systemctl stop nginx
sudo systemctl start nginx
sudo systemctl restart nginx
sudo systemctl reload nginx
sudo systemctl disable nginx
sudo systemctl enable nginx
ls  /etc/nginx
sudo nano /ect/nginx/nginx.conf
exit
------------------------------------------------------

>>>>>> Linux Mint <<<<<<<<<<<

//Install nginx on Linux Mint  All Steps:

sudo apt-get install python-software-properties
sudo add-apt-repository ppa:nginx/stable
sudo apt-get update
sudo apt-get install nginx
clear
sudo service nginx status
sudo sevice nginx stop
sudo service nginx restart
-----------------------------------------------------------------------------

