
   >>>>>>>>>>>>>> Git Commnads (in Git Bash) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
   
   ---------------------------------------------------------------------------
   
   Videos Links:
   
   ---------------------------------------------------------------------------
   Website Links: 
   //Git command line Documentation for windows 10
   https://git-scm.com/book/en/v2/Getting-Started-The-Command-Line
   ----------------------------------------------------------------------------  
   ----------------------------------------------------------------------------   
   
   //These commands for git bash
   $ git clone
   $ git init
   
   $ git add
   $ git mv
   $ git reset
   $ git rm

   $ git bisect
   $ git grep
   $ git log
   $ git show 
   $ git status 
   
   $ git branch
   $ git checkout
   $ git commit
   $ git diff
   $ git merge
   $ git rebase
   $ git tag
 
   $ git fetch
   $ git pull   
   $ git push 
   
   $ git --help
   $ git --help -a    //To show hidden files and folders
   $ git --help -g
   $ git version  

   $ git update
   $ git revert
   $ git quit
   $ git diff
   $ git patch
   $ git add untracked

   //These command for project directory   
   $ pwd                           // Show current directory
   $ ch 'c:/xampp/htdocs'         // Changing directory path
   $ ch '/..'                     //Changing one directory back
   $ ls                          // Using ls to create a table of contents for burning a CDR disk
   $ ls -la                     // 
   $ ls -a                     //Show hidden files
   $ ls -als                  // To see all files and directories in the current directory
   $ ls -ls                   // Show table list 
   $ ls -s
   $ ls -t
   $ ls -i
   $ ls -v
   $ ls -r
   
   $ ls -1 
   $ ls -2
   $ ls -1l
   $ ls -1f  //List contents in white color

   $ cat filename   // Lists of the file  


----------------------------------------------------------------------------  
   usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]	   
		   
---------------->>>>>>>>> Details <<<<<<<<<<<-------------------------------

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
------------------ *********** ------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------


---------- R e  f e r e n c e -------------------------------------------------------------------------

1.Setup and Config                   Systex: 

    git                              //$ git 
    config                          //$ git config
    help                           //$ git --help or $ git help

2.Getting and Creating Projects
    init
    clone

3.Basic Snapshotting
    add
    status
    diff
    commit
    reset
    rm
    mv
	
4.Branching and Merging
    branch
    checkout
    merge
    mergetool
    log
    stash
    tag
    worktree

5.Sharing and Updating Projects
    fetch
    pull
    push
    remote
    submodule

6.Inspection and Comparison
    show
    log
    diff
    shortlog
    describe

7.Patching
    apply
    cherry-pick
    diff
    rebase
    revert

8. Debugging
    bisect
    blame
    grep

9. Guides
    gitattributes
    Everyday Git
    Glossary
    githooks
    gitignore
    gitmodules
    Revisions
    Tutorial
    Workflows

10. Email
    am
    apply
    format-patch
    send-email
    request-pull

11.External Systems
    svn
    fast-import

12. Administration
    clean
    gc
    fsck
    reflog
    filter-branch
    instaweb
    archive
    bundle

13. Server Admin
    daemon
    update-server-info

14. Plumbing Commands
    cat-file
    check-ignore
    checkout-index
    commit-tree
    count-objects
    diff-index
    for-each-ref
    hash-object
    ls-files
    merge-base
    read-tree
    rev-list
    rev-parse
    show-ref
    symbolic-ref
    update-index
    update-ref
    verify-pack
    write-tree
-------------------------------------------------------------------------
