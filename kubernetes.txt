
>>>>>>> Kubernetes <<<<<<<<<

Minikube    
KubeCTL 
Create YML File
Microk8s CMDS

-------------------------------------------------
-------------------------------------------------

What is Minicube
Minikube installation steps in windows
How to deploy first spring boot application to Kubernetes

-------------------------------------------------
-------------------------------------------------


Installatioin: 

1. Minikube     (  )
2. KubeCTL      (  )


Requirements:

  1. Virtual Box Or Hiper-V or docker ( as a driver )
  


--------------------------------------------------
--------------------------------------------------

1. Minikube Installation ( minikube.exe )

   Usually used to run k8s cluster in your local machine/computer.

   Minikube runs a single-node Kubernetes cluster on your machine so that you can try out Kubernetes for your daily development work.

   Minikube is a lightweight Kubernetes implementation that creates a VM on your local machine and deploys a simple cluster containing only one node.




2. KubeCtl Installation ( Kubectl.exe )

	kubectl. The Kubernetes command-line tool, kubectl, allows you to run commands against Kubernetes clusters. You can use kubectl to deploy applications, inspect and manage cluster resources, and view logs. For more information including a complete list of kubectl operations, see the kubectl reference documentation.



# Download minikube & kubectl
# Install first minikube second kubectl
# Path to environment variable  ( kubectl & minikube )
# 
# Open cmd write command 
	> minikube start --driver=docker
    > minikube status
    > kubectl cluster-info
    > kubectl get node


    Now install spring boot project
    > minikube docker-env
    > copy the above command showing @FOR /F %1 ('minikube -p minikube docker-env') Do @i
    > docker images
    > ........... more



-------------------------------------------------------------------
-------------------------------------------------------------------
//Creating first yml file 
MyFirst Yaml File:

apiVersion: 
kind: 
metadata:
spec:



apiVersion: v1
kind: Pod

metadata:
 name: myfirstpod
 labels: 
  env:prod
  
spec:
 containers:
  - name: containername
    image: coolgaurab147/nginx-custom
    
    
    
    
Run Yamal File: 
 kubectl create -f firstpod.yml --dry-run
 cat myfirstpod.yml
 kubectl create -f firstpod.yml
 kubectl get pods
 kubectl explain pod --recursive !less
 
 
 //Create k8s pod
 kubectl run secondpod --generator=run-pod/v1 --image=coolgaurab147/nginx-custom
 //Client side run 
 kubectl run secondpod --dry-run --generator=run-pod/v1 --image=coolgaurab147/nginx-custom
 kubectl run secondpod --dry-run --generator=run-pod/v1 --image=coolgaurab147/nginx-custom -o yaml
 
 //Output redirect to new yaml file
  kubectl run secondpod --dry-run --generator=run-pod/v1 --image=coolgaurab147/nginx-custom -o yaml > mysecondpd.yml
  
  
  Commands: 
  kubectl get pods
  kubectl delete pods myfirstpod
  ls
  kubectl apply -f mysecond.yml    //Create pod  
 
--------------------------------------------

 >>> Microk8s CMDS <<<<<<
 
 $ microk8s
 $ microk8s status
 $ microk8s kubectl get all --all-namespaces
 $ microk8s kubectl get pods
 -------------------------------------------


